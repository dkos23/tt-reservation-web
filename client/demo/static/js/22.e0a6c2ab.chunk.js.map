{"version":3,"sources":["admin/UserManagementPage.module.css","admin/UserManagementPage.js"],"names":["module","exports","UserManagementPage","userId","useContext","authContext","user","useState","users","setUsers","useApi","getUsersApi","getState","deleteUserApi","deleteState","deleteUser","patchUserApi","putState","patchUser","keyedUsers","useMemo","map","u","key","handleDeleteUser","useCallback","path","handleSetAdmin","admin","columns","title","dataIndex","width","sorter","a","b","render","_","record","disabled","type","icon","onClick","Modal","confirm","content","name","mail","okText","okType","cancelText","onOk","localeCompare","verified","lastActivity","format","upcomingReservationCount","totalReservationCount","window","location","href","danger","_id","error","className","styles","wrapper","dataSource","loading","scroll","x"],"mappings":"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","file":"static/js/22.e0a6c2ab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"UserManagementPage_wrapper__LewMU\",\"spacer\":\"UserManagementPage_spacer__3pBNT\"};","import { Button, Modal, Space, Table, Tooltip } from 'antd';\nimport { DeleteOutlined, EditOutlined, ExclamationCircleOutlined, MailOutlined } from '@ant-design/icons';\nimport React, { useCallback, useContext, useMemo, useState } from 'react';\nimport { deleteUserApi, getUsersApi, patchUserApi } from '../api';\n\nimport { ErrorResult } from '../ErrorResult';\nimport { authContext } from '../AuthContext';\nimport styles from './UserManagementPage.module.css';\nimport { useApi } from '../useApi';\n\nexport function UserManagementPage() {\n\n    const { user: { userId } } = useContext(authContext);\n\n    const [users, setUsers] = useState([]);\n    const [getState,] = useApi(getUsersApi, setUsers, true);\n    const [deleteState, deleteUser] = useApi(deleteUserApi, setUsers);\n    const [putState, patchUser] = useApi(patchUserApi, setUsers);\n\n    // key prop is required for antd\n    const keyedUsers = useMemo(() => users.map(u => ({ ...u, key: u.userId })), [users]);\n\n    const handleDeleteUser = useCallback(userId => {\n        deleteUser({ path: { userId } }, { userId });\n    }, [deleteUser]);\n\n    const handleSetAdmin = useCallback((userId, admin) => {\n        patchUser({ path: { userId } }, {\n            userId,\n            admin,\n        });\n    }, [patchUser]);\n\n    const columns = [\n        {\n            title: 'UserId',\n            dataIndex: 'userId',\n            key: 'userId',\n            width: '5%',\n            sorter: (a, b) => a.userId < b.userId ? -1 : 1,\n        },\n        {\n            title: 'Admin',\n            dataIndex: 'admin',\n            key: 'admin',\n            width: '10%',\n            sorter: (a, b) => a.admin === b.admin ? 0 : (a.admin ? -1 : 1),\n            render: (_, record) => (\n                <div>\n                    {record.admin ? \"Ja\" : \"Nein\"}\n                    <Tooltip title=\"Adminstatus ändern\">\n                        <Button\n                            disabled={record.userId === userId}\n                            type=\"link\"\n                            icon={<EditOutlined />}\n                            onClick={() => {\n                                Modal.confirm({\n                                    title: record.admin ? 'Adminrechte entziehen?' : 'Adminrechte vergeben?',\n                                    icon: <ExclamationCircleOutlined />,\n                                    content: (\n                                        <div>\n                                            Der Nutzer\n                                            <br />\n                                            <strong>{record.name} ({record.mail})</strong>\n                                            <br />\n                                            wird durch diese Aktion {record.admin ? 'zu einem normalen Nutzer herabgestuft.' : 'zum Admin befördert.'}\n                                        </div>\n                                    ),\n                                    okText: record.admin ? 'Rechte entziehen' : 'Zum Admin machen',\n                                    okType: 'danger',\n                                    cancelText: 'Abbrechen',\n                                    onOk() {\n                                        handleSetAdmin(record.userId, !record.admin);\n                                    },\n                                });\n                            }}\n                        />\n                    </Tooltip>\n                </div>\n            )\n        },\n        {\n            title: 'Name',\n            dataIndex: 'name',\n            key: 'name',\n            width: '20%',\n            sorter: (a, b) => a.name.localeCompare(b.name),\n        },\n        {\n            title: 'E-Mail',\n            dataIndex: 'mail',\n            key: 'mail',\n            width: '25%',\n            sorter: (a, b) => a.mail.localeCompare(b.mail),\n        },\n        {\n            title: 'Verifiziert',\n            dataIndex: 'verified',\n            key: 'verified',\n            width: '5%',\n            sorter: (a, b) => a.verified === b.verified ? 0 : (a.verified ? -1 : 1),\n            render: (_, record) => record.verified ? 'Ja' : 'Nein',\n        },\n        {\n            title: 'Letzte Aktivität',\n            dataIndex: 'lastActivity',\n            key: 'lastActivity',\n            width: '20%',\n            sorter: (a, b) => a.lastActivity - b.lastActivity,\n            render: (_, record) => record.lastActivity?.format('L LT'),\n        },\n        {\n            title: 'Reservierungen (offen)',\n            dataIndex: 'upcomingReservationCount',\n            key: 'upcomingReservationCount',\n            width: '5%',\n            sorter: (a, b) => a.upcomingReservationCount - b.upcomingReservationCount,\n        },\n        {\n            title: 'Reservierungen (gesamt)',\n            dataIndex: 'totalReservationCount',\n            key: 'totalReservationCount',\n            width: '5%',\n            sorter: (a, b) => a.totalReservationCount - b.totalReservationCount,\n        },\n        {\n            title: 'Aktionen',\n            key: 'action',\n            render: (_, record) => (\n                <Space key={record._id}>\n                    <Tooltip title=\"E-Mail senden\">\n                        <Button\n                            type=\"link\"\n                            icon={<MailOutlined />}\n                            disabled={record.userId === userId}\n                            onClick={() => {\n                                window.location.href = `mailto:${record.mail}`;\n                            }}\n                        />\n                    </Tooltip>\n                    <Tooltip title=\"Nutzer löschen\">\n                        <Button\n                            type=\"link\"\n                            danger\n                            icon={<DeleteOutlined />}\n                            disabled={record.userId === userId}\n                            onClick={() => {\n                                Modal.confirm({\n                                    title: 'Nutzer löschen?',\n                                    icon: <ExclamationCircleOutlined />,\n                                    content: (\n                                        <>\n                                            <div>Diese Aktion kann nicht rückgängig gemacht werden.</div>\n                                            <div>Es werden alle Daten sowie Reservierungen unwiderruflich gelöscht.</div>\n                                            <br />\n                                            <div>\n                                                <strong>\n                                                    Nutzer: {record.name}\n                                                    <br />\n                                                    E-Mail: {record.mail}\n                                                </strong>\n                                            </div>\n                                        </>\n                                    ),\n                                    okText: 'Unwiderruflich Löschen',\n                                    okType: 'danger',\n                                    cancelText: 'Abbrechen',\n                                    onOk() {\n                                        handleDeleteUser(record.userId);\n                                    },\n                                });\n                            }}\n                        />\n                    </Tooltip>\n                </Space>\n            ),\n        },\n    ];\n\n    if (getState.error || deleteState.error || putState.error)\n        return <ErrorResult />\n\n    return (\n        <div className={styles.wrapper}>\n            <h1>Nutzerverwaltung</h1>\n            <Table\n                columns={columns}\n                dataSource={keyedUsers}\n                loading={getState.loading || deleteState.loading || putState.loading}\n                scroll={{ x: 1300 }}\n            />\n        </div>\n    )\n}"],"sourceRoot":""}