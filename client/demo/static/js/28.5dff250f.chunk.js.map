{"version":3,"sources":["../node_modules/@ant-design/icons-svg/es/asn/ExperimentOutlined.js","../node_modules/@ant-design/icons/es/icons/ExperimentOutlined.js","demo/DemoControls.js"],"names":["ExperimentOutlined","props","ref","React","AntdIcon","Object","assign","icon","ExperimentOutlinedSvg","displayName","demoControl","DemoControls","useContext","authContext","user","setUser","useState","open","setOpen","useApi","postLoginApi","login","history","useHistory","location","useLocation","useEffect","notification","info","key","message","duration","placement","onClose","description","direction","pathname","size","onClick","push","userId","type","mail","password","close","style","position","bottom","right"],"mappings":"6SAEeA,EADU,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,ygBAA6gB,KAAQ,aAAc,MAAS,Y,QCKxsBA,EAAqB,SAA4BC,EAAOC,GAC1D,OAAOC,gBAAoBC,IAAUC,OAAOC,OAAO,GAAIL,EAAO,CAC5DC,IAAKA,EACLK,KAAMC,MAIVR,EAAmBS,YAAc,qBAClBN,mBAAiBH,G,wBCLnBU,EAAc,GAEpB,SAASC,IAAgB,IAAD,EAEDC,qBAAWC,KAA7BC,EAFmB,EAEnBA,KAAMC,EAFa,EAEbA,QAFa,EAGHC,oBAAS,GAHN,mBAGpBC,EAHoB,KAGdC,EAHc,OAITC,YAAOC,IAAcL,GAA9BM,EAJkB,oBAMrBC,EAAUC,cAChBb,EAAYY,QAAUA,EACtB,IAAME,EAAWC,cA2DjB,OAzDAC,qBAAU,WACDT,EAKLU,IAAaC,KAAK,CACdC,IAAK,OACLC,QAAS,aACTC,SAAU,EACVC,UAAW,cACXzB,KAAM,cAAC,EAAD,IACN0B,QAAS,kBAAMf,GAAQ,IACvBgB,YACI,qCACI,kFACA,eAAC,IAAD,CAAOC,UAAU,WAAjB,UAC2B,WAAtBX,EAASY,SAEF,cAAC,IAAD,CAAQC,KAAK,SAASC,QAAS,kBAAMhB,EAAQiB,KAAK,MAAlD,mCAIA,qCACI,cAAC,IAAD,CAAQF,KAAK,SAASC,QAAS,kBAAMhB,EAAQiB,KAAK,WAAlD,yBAGkB,KAAb,OAAJzB,QAAI,IAAJA,OAAA,EAAAA,EAAM0B,SACH,cAAC,IAAD,CAAQH,KAAK,SAASC,QAAS,kBAAMjB,EAAM,KAAM,CAC7CoB,KAAM,QACNC,KAAM,mBACNC,SAAU,UAHd,uCAQc,KAAb,OAAJ7B,QAAI,IAAJA,OAAA,EAAAA,EAAM0B,SACH,cAAC,IAAD,CAAQH,KAAK,SAASC,QAAS,kBAAMjB,EAAM,KAAM,CAC7CoB,KAAM,QACNC,KAAM,kBACNC,SAAU,UAHd,0CAWhB,cAAC,IAAD,CAAQN,KAAK,SAASI,KAAK,UAAUH,QAAS,kBAAMpB,GAAQ,IAA5D,gCA9CZS,IAAaiB,MAAM,UAqDxB,CAAC3B,EAAMK,EAASE,EAAUV,EAAMO,IAE9BJ,EAWE,KATC,cAAC,IAAD,CACI4B,MAAO,CAAEC,SAAU,QAASC,OAAQ,EAAGC,MAAO,GAC9CP,KAAK,UACLH,QAAS,kBAAMpB,GAAQ,IAH3B","file":"static/js/28.5dff250f.chunk.js","sourcesContent":["// This icon file is generated automatically.\nvar ExperimentOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 472a40 40 0 1080 0 40 40 0 10-80 0zm367 352.9L696.3 352V178H768v-68H256v68h71.7v174L145 824.9c-2.8 7.4-4.3 15.2-4.3 23.1 0 35.3 28.7 64 64 64h614.6c7.9 0 15.7-1.5 23.1-4.3 33-12.7 49.4-49.8 36.6-82.8zM395.7 364.7V180h232.6v184.7L719.2 600c-20.7-5.3-42.1-8-63.9-8-61.2 0-119.2 21.5-165.3 60a188.78 188.78 0 01-121.3 43.9c-32.7 0-64.1-8.3-91.8-23.7l118.8-307.5zM210.5 844l41.7-107.8c35.7 18.1 75.4 27.8 116.6 27.8 61.2 0 119.2-21.5 165.3-60 33.9-28.2 76.3-43.9 121.3-43.9 35 0 68.4 9.5 97.6 27.1L813.5 844h-603z\" } }] }, \"name\": \"experiment\", \"theme\": \"outlined\" };\nexport default ExperimentOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport ExperimentOutlinedSvg from \"@ant-design/icons-svg/es/asn/ExperimentOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar ExperimentOutlined = function ExperimentOutlined(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: ExperimentOutlinedSvg\n  }));\n};\n\nExperimentOutlined.displayName = 'ExperimentOutlined';\nexport default React.forwardRef(ExperimentOutlined);","import { Button, Space, notification } from 'antd';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport { ExperimentOutlined } from '@ant-design/icons';\nimport { authContext } from '../AuthContext';\nimport { postLoginApi } from '../api';\nimport { useApi } from '../useApi';\n\nexport const demoControl = {};\n\nexport function DemoControls() {\n\n    const { user, setUser } = useContext(authContext);\n    const [open, setOpen] = useState(true);\n    const [, login] = useApi(postLoginApi, setUser);\n\n    const history = useHistory();\n    demoControl.history = history;\n    const location = useLocation();\n\n    useEffect(() => {\n        if (!open) {\n            notification.close('demo');\n            return;\n        }\n\n        notification.info({\n            key: 'demo',\n            message: 'Demo Modus',\n            duration: 0,\n            placement: 'bottomRight',\n            icon: <ExperimentOutlined />,\n            onClose: () => setOpen(false),\n            description: (\n                <>\n                    <p>Dies ist eine Demo, gef√ºllt mit Beispieldaten.</p>\n                    <Space direction=\"vertical\">\n                        {location.pathname === '/kiosk' ?\n                            (\n                                <Button size=\"middle\" onClick={() => history.push('/')}>\n                                    Kiosk Modus verlassen\n                                </Button>\n                            ) : (\n                                <>\n                                    <Button size=\"middle\" onClick={() => history.push('/kiosk')}>\n                                        Kiosk Modus\n                                    </Button>\n                                    {user?.userId !== 2 &&\n                                        <Button size=\"middle\" onClick={() => login(null, {\n                                            type: 'plain',\n                                            mail: 'otto@example.com',\n                                            password: 'demo',\n                                        })}>\n                                            Als Admin (Otto) anmelden\n                                        </Button>\n                                    }\n                                    {user?.userId !== 9 &&\n                                        <Button size=\"middle\" onClick={() => login(null, {\n                                            type: 'plain',\n                                            mail: 'max@example.com',\n                                            password: 'demo',\n                                        })}>\n                                            Als Nutzer (Max) anmelden\n                                        </Button>\n                                    }\n                                </>\n                            )\n                        }\n                        <Button size=\"middle\" type=\"primary\" onClick={() => setOpen(false)}>\n                            Ausblenden\n                        </Button>\n                    </Space>\n                </>\n            ),\n        });\n    }, [open, history, location, user, login]);\n\n    if (!open)\n        return (\n            <Button \n                style={{ position: 'fixed', bottom: 5, right: 5 }}\n                type=\"primary\" \n                onClick={() => setOpen(true)}\n            >\n                Demosteuerung einblenden\n            </Button>\n        );\n\n    return null;\n}"],"sourceRoot":""}